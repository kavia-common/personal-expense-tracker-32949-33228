{"is_source_file": true, "format": "Python", "description": "This module defines API routes for managing expenses in a FastAPI backend. It includes endpoints for listing, creating, retrieving, updating, and deleting expenses, with user ownership validation and optional query filters.", "external_files": ["src/api/deps.py", "src/core/database.py", "src/models/models.py", "src/schemas/schemas.py"], "external_methods": ["get_current_user", "get_db"], "published": ["router"], "classes": [{"name": "Expense", "description": "Represents an expense record, likely mapped to a database table."}, {"name": "User", "description": "Represents a user account, used for ownership validation."}, {"name": "Category", "description": "Represents a category for expenses, used to filter and validate categories."}], "methods": [{"name": "list_expenses( start: Optional[datetime] = Query(None, description=\"Start datetime (inclusive)\"), end: Optional[datetime] = Query(None, description=\"End datetime (inclusive)\"), category_id: Optional[int] = Query(None, description=\"Filter by category id\"), db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )", "description": "Handles GET requests to list expenses for the current user, with optional filtering by date range and category.", "scope": "", "scopeKind": ""}, {"name": "create_expense( payload: ExpenseCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )", "description": "Handles POST requests to create a new expense record for the current user.", "scope": "", "scopeKind": ""}, {"name": "get_expense( expense_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )", "description": "Handles GET requests to retrieve a single expense by ID for the current user.", "scope": "", "scopeKind": ""}, {"name": "update_expense( expense_id: int, payload: ExpenseCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )", "description": "Handles PUT requests to update an existing expense, with validation for category ownership.", "scope": "", "scopeKind": ""}, {"name": "delete_expense( expense_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )", "description": "Handles DELETE requests to remove an expense owned by the current user.", "scope": "", "scopeKind": ""}], "calls": ["db.query(Expense)", "db.query(Category)", "db.add(exp)", "db.commit()", "db.refresh(exp)", "db.delete(exp)"], "search-terms": ["expenses API", "expense CRUD FastAPI", "user-owned expense endpoints", "category filter expenses", "expense schema FastAPI"], "state": 2, "file_id": 20, "knowledge_revision": 44, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_expense", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-32949-33228/expense_fastapi_backend/src/api/routers_expenses.py", "pattern": "/^def create_expense($/", "language": "Python", "kind": "function", "signature": "( payload: ExpenseCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )"}, {"_type": "tag", "name": "delete_expense", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-32949-33228/expense_fastapi_backend/src/api/routers_expenses.py", "pattern": "/^def delete_expense($/", "language": "Python", "kind": "function", "signature": "( expense_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )"}, {"_type": "tag", "name": "get_expense", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-32949-33228/expense_fastapi_backend/src/api/routers_expenses.py", "pattern": "/^def get_expense($/", "language": "Python", "kind": "function", "signature": "( expense_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )"}, {"_type": "tag", "name": "list_expenses", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-32949-33228/expense_fastapi_backend/src/api/routers_expenses.py", "pattern": "/^def list_expenses($/", "language": "Python", "kind": "function", "signature": "( start: Optional[datetime] = Query(None, description=\"Start datetime (inclusive)\"), end: Optional[datetime] = Query(None, description=\"End datetime (inclusive)\"), category_id: Optional[int] = Query(None, description=\"Filter by category id\"), db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-32949-33228/expense_fastapi_backend/src/api/routers_expenses.py", "pattern": "/^router = APIRouter(prefix=\"\\/expenses\", tags=[\"Expenses\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_expense", "path": "/home/kavia/workspace/code-generation/personal-expense-tracker-32949-33228/expense_fastapi_backend/src/api/routers_expenses.py", "pattern": "/^def update_expense($/", "language": "Python", "kind": "function", "signature": "( expense_id: int, payload: ExpenseCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )"}], "hash": "b281b9060d34e3506ad7f968a4acf193", "format-version": 4, "code-base-name": "expense_fastapi_backend", "filename": "expense_fastapi_backend/src/api/routers_expenses.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/expenses\", tags=[\"Expenses\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"44": ""}]}